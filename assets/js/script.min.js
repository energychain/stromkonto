$(document).ready(function() {
    $('.iot').iot();
});
$.qparam = function (name) {
    var results = new RegExp('[\?&]' + name + '=([^&#]*)')
                      .exec(window.location.search);

    return (results !== null) ? results[1] || 0 : false;
}

function resolvAddress(address) {    if(address=="0x445c1e284c15a50a69fe7d6dcd9fba3b938b52bb") return "Eigenerzeugung";
    if(address=="0xdcbab2b1c28b6f57c367f4eff0f5c7893400cc4d") return "Grünstrombonus";
    return address;
}

function webview_save(cb) {
    console.log("SAVING");
    let data = {};
    let keys = Object.keys(localStorage);
    for(var i=0;i<keys.length;i++) {
        data[keys[i]]=window.localStorage.getItem(keys[i]);
    }    
       
    if(data !=null) {
        $.post('https://api.corrently.io/core/webuser',data,function(c) { 
            if(typeof cb == "function") cb();
        });
    }
}
           
function webview() {
    if(typeof window.localStorage.getItem("webview")!=null) {
        webview_save();
    }
    // open wallet
    let wallet = new CorrentlyWallet.default.Wallet(CorrentlyWallet.default.utils.id($('#web_name').val()+"@"+$('#web_password').val()));
    window.localStorage.setItem("webview",wallet.address);
    $.getJSON('https://api.corrently.io/core/webuser?webview='+wallet.address,function(viewdata) {
        if(typeof viewdata.webview == "undefined") {
            $('#btn_webview').hide();
            $('#valigroup').show();
            $('#btn_vali').click(function() {
                if($('#web_password').val()==$('#pwd2').val()) {
                     $('#valigroup').hide();
                        let data = {};
                        data.webview=wallet.address;
                      $.post('https://api.corrently.io/core/webuser',data,function(c) {                           
                               $('#frm_panel').hide();  
                               $('#web_panel').hide();   
                               $('.appcontent').show();
                      });
                } else {
                    alert("Passwörter stimmen nicht überein");
                }
            })
        } else {
            let keys = Object.keys(viewdata);
            for(var i=0;i<keys.length;i++) {
                    window.localStorage.setItem(keys[i],viewdata[keys[i]]);
            }            
            $('#frm_panel').hide();  
            $('#web_panel').hide();   
            $('.appcontent').show();
        }
    })
}

let stromkonto_data= {};
stromkonto_data.txpage=0;
let stromkonto_txs = [];
stromkonto_txs.last_balance_eur=0;
let bc_status = {};

function initVue()  {
  $('#frm_panel').hide();
  $('#web_panel').hide();
  let view = new Vue({
        el: '#app',
        data: stromkonto_data});
  $('#app').attr("initialized","true");
  $('.appcontent').show();      
                
}
function initBCStatus() {
    bc_status.blocktime="";
    bc_status.blocknumber = "";
    
    let view = new Vue({
        el: '#bcstatus',
        data: bc_status});
    $('#bcstatus').attr("initialized","true");    
    setInterval(updateBCStatus,15000);
    updateBCStatus();
}

function updateBCStatus() {    
    let wallet = new CorrentlyWallet.default.Wallet(CorrentlyWallet.default.Wallet.createRandom().privateKey,new CorrentlyWallet.default.providers.JsonRpcProvider("https://node.corrently.io/rpc", { chainId: 42 }));    
    wallet.provider.getBlockNumber().then(function(l) { 
            bc_status.blocknumber=l;
    } );
}
function gsiTable() {
    var html="";
    if(typeof stromkonto_data.account.gsi == "undefined") return;
    if(typeof stromkonto_data.account.gsi.forecast == "undefined") return;
    if(typeof stromkonto_data.account.gsi.bonus == "undefined") return;
    stromkonto_data.green_power = (stromkonto_data.account.gsi.points/(stromkonto_data.account.gsi.points+stromkonto_data.account.gsi.residual)*100).toFixed(1).replace('.',',');
    
    $('#gsi_bonus').html((stromkonto_data.account.gsi.bonus*100).toFixed(2).replace('.',','));
    html+="<table class='table table-sm table-responsive' style='margin:0px;'>";
    let row_time="<td class='bg-secondary text-light'>Uhrzeit</td>";
    let row_day="<td class='bg-secondary text-light'>&nbsp;</td>";
    let row_bonus="<td>Cent/kWh</td>";
    let lastdate="";
    
    for(var i=0;i<stromkonto_data.account.gsi.forecast.length;i++) {
        let item=stromkonto_data.account.gsi.forecast[i];
        let ts=item.epochtime*1000;
        var today = new Date(ts);
        var dd = today.getDate();
        var mm = today.getMonth()+1; 
        var yyyy = today.getFullYear();
        var datestr = dd+"."+mm;
        if(ts>new Date().getTime()) {
            if(item.eevalue < 30) row_bonus+="<td class='bg-danger gsi'  style='text-align:center' title='"+item.eevalue+"%'>"; else
            if(item.eevalue > 70) row_bonus+="<td class='bg-success gsi' style='text-align:center' title='"+item.eevalue+"%'>"; else
            row_bonus+="<td class='bg-warning gsi' style='text-align:center' title='"+item.eevalue+"%'>";
            row_bonus+=(stromkonto_data.account.gsi.bonus*item.eevalue).toFixed(2).replace('.',',')
            row_bonus+="</td>";
            row_time+="<td class='bg-secondary text-light gsi' style='min-widht:70px;text-align:center' title='"+new Date(ts).toLocaleString()+"'>";
            row_time+=new Date(ts).getHours()+":00";
            row_time+="</td>";     
            
            if(datestr!=lastdate) {
                lastdate=datestr;
            row_day+="<td class='bg-secondary text-light' style='min-widht:70px;text-align:center;border-left:1px solid #c6c6c6' title='"+new Date(ts).toLocaleString()+"'>";    
                row_day+="<strong>"+datestr+"</strong>";
                
            } else {
                row_day+="<td class='bg-secondary text-light' style='min-widht:70px;text-align:center;' title='"+new Date(ts).toLocaleString()+"'>";
                row_day+="&nbsp;";
            }
            row_day+="</td>";     
        }
    }    
    html+="<tr>"+row_day+"</tr>";
    html+="<tr>"+row_time+"</tr>";
    html+="<tr style='height:45px;'>"+row_bonus+"</tr>";
    html+="</table>";
    $('#gsi').html(html);
    $('#gsi').show();
    $('#gsi_card').show();
}

function timeStamp(blockNumber) {
    let ts = window.localStorage.getItem("ts_"+blockNumber);
    if(ts==null) {
        let provider = new CorrentlyWallet.default.providers.JsonRpcProvider('https://node.corrently.io/rpc', { chainId: 42 });
        provider.getBlock(blockNumber).then(function(bi) {
            ts = bi.timestamp;
            window.localStorage.setItem("ts_"+blockNumber,ts);
            for(var i=0;i<stromkonto_data.txs.length;i++) {
                if(stromkonto_data.txs[i].blockNumber==blockNumber) {
                    stromkonto_data.txs[i].timeStamp=new Date(ts*1000).toLocaleString();
                }
            }
        });
        return "#"+blockNumber;
    } else return new Date(ts*1000).toLocaleString();
}
function osSubscribe() {   
    if($('#account').val().length==42) {
        let sko="sko_"+$('#account').val();
        let tags = {stromkonto: $('#account').val()};
        tags["gsi_"+$('#account').val()]="Y";    
        OneSignal.sendTags(tags).then(function(x) {  });
        $.getJSON("https://api.corrently.io/notification/stromkonto_notify?account="+$('#account').val(),function(d) {});
    }
}
function openAccount() {    
    $('#frm_panel').hide();  
     $('.appcontent').show();
    $('#account_nr').html($('#account').val());
    if(($('#account_alias').val()+"").length>0) {
        if(window.localStorage.getItem("alias_"+$('#account_alias').val())==null) {
            window.localStorage.setItem("alias_"+$('#account_alias').val(),$('#account').val());     
            webview_save();                
        }
        $('#frm_panel').hide(); 
        $('.appcontent').show();
    }
    if(($('#account').val()+"").length!=42) {
        $('#account').val(window.localStorage.getItem("alias_"+$('#account').val()));
    }   
    window.localStorage.setItem("lastAddress",$('#account').val());
    CorrentlyWallet.default.Stromkonto($('#account').val()).then(function(l) { 
        CorrentlyWallet.default.CorrentlyAccount($('#account').val()).then(function(account) {
                stromkonto_data = l.result;
                if(typeof account.ap == "undefined") {
                    $('#tarifalert').removeClass('d-none');
                }
                stromkonto_data.green_power = "-";
                stromkonto_data.account = account;
                if(typeof stromkonto_data.account.clearedGeneration != "undefined") {
                   if(stromkonto_data.account.clearedGeneration==0) {
                        if((stromkonto_data.haben>0)&&(typeof stromkonto_data.account.ap != "undefined")) {
                            stromkonto_data.account.clearedGeneration=(stromkonto_data.haben/stromkonto_data.account.ap)/100000;
                        }    
                   } 
                  stromkonto_data.generation_3f=stromkonto_data.account.clearedGeneration.toFixed(3).replace('.',',');
                     
                } else {
                    stromkonto_data.generation_3f=0;
                }
                stromkonto_data.txs = stromkonto_txs;
                if( $('#app').attr("initialized")!="true") initVue();
                if(typeof l.transactions == "function") {                    
                    l.transactions().then(function(mytxs) {   
                        let balance_ongoing=stromkonto_data.balance;                          
                        mytxs = mytxs.slice(0,12);
                        for(var i=0; i<mytxs.length;i++) {
                            mytxs[i].peer = resolvAddress(mytxs[i].peer);  
                            if(mytxs[i].from == "0xdcbab2b1c28b6f57c367f4eff0f5c7893400cc4d") {
                                mytxs[i].peer += " (für "+mytxs[i].base_abs+" kWh)";
                            }
                            mytxs[i].timeStamp =  timeStamp(mytxs[i].blockNumber);   
                            balance_ongoing-=(mytxs[i].value*100000);
                        }
                        stromkonto_txs = mytxs;
                        stromkonto_data.txs = mytxs;           
                        $('#start_saldo').html((balance_ongoing/100000).toFixed(5).replace('.',','));
                    });
                }
                $('#app').show();                    
                gsiTable();
                setTimeout(openAccount,31000);
        });
    });            
}

$(document).ready(function() {
    $('#app').hide();
    $('#gsi').hide();
    $('#valigroup').hide();
    initBCStatus();
    if($.qparam("a")) {
        $('#account').val($.qparam("a"));
    } else {
        if(window.localStorage.getItem("privateKey")) {
           let lwallet = new CorrentlyWallet.default.Wallet(window.localStorage.getItem("privateKey"));
            $('#account').val(lwallet.address);
        } else {
            if(window.localStorage.getItem("lastAddress")) {
                $('#account').val(window.localStorage.getItem("lastAddress"));
            } else {
                let lwallet = CorrentlyWallet.default.Wallet.createRandom();
                $('#account').val(lwallet.address);
            }
        }
    }
    $('#btn_open').click(openAccount);
    $('#btn_webview').click(webview);
    $('#mform').submit(function() { return false; });
    openAccount();    
    osSubscribe();
    $('#btn_change').click(function() {
       $('#frm_panel').show();  
       $('#web_panel').hide();   
       $('.appcontent').hide();
       let html="";
       let keys = Object.keys(localStorage);
       for(var i=0;i<keys.length;i++) {           
           if(keys[i].substr(0,6)=="alias_") {               
               html+='<a role="presentation" href="/?a='+window.localStorage.getItem(keys[i])+'" >'+keys[i].substr(6)+'</a>';
           }            
       }    

       $('#history').html(html);
    });
    $('#btn_switch_ledger').click(function() {
       $('#web_panel').show();        
       $('#frm_panel').hide();        
       $('.appcontent').hide();
    });
    $('#reload_link').click(function() {
       location.reload(false); 
    });
});
var blurred = false;
window.onblur = function() { blurred = true; };
window.onfocus = function() { blurred && (openAccount()); };
